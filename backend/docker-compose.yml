version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5440:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  profileService:
    build:
      context: ./profiles/
      dockerfile: ../Dockerfile
    image: profiles_service:latest
    depends_on:
      - postgres
#      - deckShufflingService
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/gymbroDB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"

  likesService:
    build:
      context: ./likes/
      dockerfile: ../Dockerfile
    image: likes_service:latest
    depends_on:
      - postgres
      - notificationsService
    environment:
      SPRING_LIKES_DATASOURCE_URL: jdbc:postgresql://postgres:5432/likesdb
      SPRING_LIKES_DATASOURCE_USERNAME: postgres
      SPRING_LIKES_DATASOURCE_PASSWORD: postgres
      NOTIFICATION_SERVICE_URL: "http://notifications:8080"
    ports:
      - "8081:8080"

  notificationsService:
    build:
      context: ./notifications/
      dockerfile: ../Dockerfile
    container_name: notifications
    image: notifications_service:latest
#    depends_on:
#       - kafka
    ports:
      - "8082:8080"

  deckShufflingService:
    build:
      context: ./deckShuffle/
      dockerfile: ../Dockerfile
    container_name: deck_shuffle
    image: deck_shuffle_service:latest
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/gymbroDB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8083:8080"


volumes:
  postgres_data:
